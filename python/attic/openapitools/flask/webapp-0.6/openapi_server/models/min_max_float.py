from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class MinMaxFloat(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, min=None, max=None, units=None):  # noqa: E501
        """MinMaxFloat - a model defined in OpenAPI

        :param min: The min of this MinMaxFloat.  # noqa: E501
        :type min: float
        :param max: The max of this MinMaxFloat.  # noqa: E501
        :type max: float
        :param units: The units of this MinMaxFloat.  # noqa: E501
        :type units: str
        """
        self.openapi_types = {
            'min': float,
            'max': float,
            'units': str
        }

        self.attribute_map = {
            'min': 'min',
            'max': 'max',
            'units': 'units'
        }

        self._min = min
        self._max = max
        self._units = units

    @classmethod
    def from_dict(cls, dikt) -> 'MinMaxFloat':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The MinMaxFloat of this MinMaxFloat.  # noqa: E501
        :rtype: MinMaxFloat
        """
        return util.deserialize_model(dikt, cls)

    @property
    def min(self) -> float:
        """Gets the min of this MinMaxFloat.


        :return: The min of this MinMaxFloat.
        :rtype: float
        """
        return self._min

    @min.setter
    def min(self, min: float):
        """Sets the min of this MinMaxFloat.


        :param min: The min of this MinMaxFloat.
        :type min: float
        """

        self._min = min

    @property
    def max(self) -> float:
        """Gets the max of this MinMaxFloat.


        :return: The max of this MinMaxFloat.
        :rtype: float
        """
        return self._max

    @max.setter
    def max(self, max: float):
        """Sets the max of this MinMaxFloat.


        :param max: The max of this MinMaxFloat.
        :type max: float
        """

        self._max = max

    @property
    def units(self) -> str:
        """Gets the units of this MinMaxFloat.


        :return: The units of this MinMaxFloat.
        :rtype: str
        """
        return self._units

    @units.setter
    def units(self, units: str):
        """Sets the units of this MinMaxFloat.


        :param units: The units of this MinMaxFloat.
        :type units: str
        """

        self._units = units
