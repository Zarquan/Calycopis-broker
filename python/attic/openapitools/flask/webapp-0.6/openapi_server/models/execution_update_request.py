from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.update_base import UpdateBase
from openapi_server import util

from openapi_server.models.update_base import UpdateBase  # noqa: E501

class ExecutionUpdateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type=None, path=None):  # noqa: E501
        """ExecutionUpdateRequest - a model defined in OpenAPI

        :param type: The type of this ExecutionUpdateRequest.  # noqa: E501
        :type type: str
        :param path: The path of this ExecutionUpdateRequest.  # noqa: E501
        :type path: str
        """
        self.openapi_types = {
            'type': str,
            'path': str
        }

        self.attribute_map = {
            'type': 'type',
            'path': 'path'
        }

        self._type = type
        self._path = path

    @classmethod
    def from_dict(cls, dikt) -> 'ExecutionUpdateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ExecutionUpdateRequest of this ExecutionUpdateRequest.  # noqa: E501
        :rtype: ExecutionUpdateRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self) -> str:
        """Gets the type of this ExecutionUpdateRequest.


        :return: The type of this ExecutionUpdateRequest.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this ExecutionUpdateRequest.


        :param type: The type of this ExecutionUpdateRequest.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")  # noqa: E501

        self._type = type

    @property
    def path(self) -> str:
        """Gets the path of this ExecutionUpdateRequest.

        The target path that the update applies to.   # noqa: E501

        :return: The path of this ExecutionUpdateRequest.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path: str):
        """Sets the path of this ExecutionUpdateRequest.

        The target path that the update applies to.   # noqa: E501

        :param path: The path of this ExecutionUpdateRequest.
        :type path: str
        """
        if path is None:
            raise ValueError("Invalid value for `path`, must not be `None`")  # noqa: E501

        self._path = path
