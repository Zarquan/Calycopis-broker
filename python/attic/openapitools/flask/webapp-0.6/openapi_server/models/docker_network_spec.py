from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.docker_network_port import DockerNetworkPort
from openapi_server import util

from openapi_server.models.docker_network_port import DockerNetworkPort  # noqa: E501

class DockerNetworkSpec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ports=None):  # noqa: E501
        """DockerNetworkSpec - a model defined in OpenAPI

        :param ports: The ports of this DockerNetworkSpec.  # noqa: E501
        :type ports: List[DockerNetworkPort]
        """
        self.openapi_types = {
            'ports': List[DockerNetworkPort]
        }

        self.attribute_map = {
            'ports': 'ports'
        }

        self._ports = ports

    @classmethod
    def from_dict(cls, dikt) -> 'DockerNetworkSpec':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DockerNetworkSpec of this DockerNetworkSpec.  # noqa: E501
        :rtype: DockerNetworkSpec
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ports(self) -> List[DockerNetworkPort]:
        """Gets the ports of this DockerNetworkSpec.

        An array of network ports to publish.   # noqa: E501

        :return: The ports of this DockerNetworkSpec.
        :rtype: List[DockerNetworkPort]
        """
        return self._ports

    @ports.setter
    def ports(self, ports: List[DockerNetworkPort]):
        """Sets the ports of this DockerNetworkSpec.

        An array of network ports to publish.   # noqa: E501

        :param ports: The ports of this DockerNetworkSpec.
        :type ports: List[DockerNetworkPort]
        """

        self._ports = ports
