#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2025, Manchester University (http://www.manchester.ac.uk/)
#
#     This work is made available under the Creative Commons
#     Attribution-ShareAlike 4.0 International licence.
#
#     For details of the licence terms see:
#     https://creativecommons.org/licenses/by-sa/4.0/
#   </meta:licence>
# </meta:header>
#
# AIMetrics: [
#     {
#     "name": "ChatGPT",
#     "contribution": "5%"
#     }
#   ]
#

openapi: 3.1.0
info:
  title: IVOA ExecutionBroker
  version: "1.0"
  summary: IVOA ExecutionBroker interface
  description: >-
    IVOA ExecutionBroker interface
  contact:
    name: Dave Morris
    url: https://github.com/Zarquan
  license:
    name: Creative Commons Attribution Share Alike 4.0 International
    identifier: CC-BY-SA-4.0
servers:
  - url: http://localhost:8080
    description: Localhost development
paths:
  /offersets:
    post:
      operationId: OfferSetPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'OfferSetRequest'
          application/xml:
            schema:
              $ref: 'OfferSetRequest'
          application/yaml:
            schema:
              $ref: 'OfferSetRequest'
        required: true
      # TODO Errors return error codes and ErrorResponse.
      responses:
        "303":
          description: >-
            A redirect response to the '/offersets/{uuid}' endpoint.
          headers:
            Location:
              required: true
              schema:
                type: string
                format: url
        "200":
          description: >-
            A simple OK response with the same contant as the '/offersets/{uuid}' endpoint.
          content:
            application/json:
              schema:
                $ref: 'OfferSetResponse'
            application/xml:
              schema:
                $ref: 'OfferSetResponse'
            application/yaml:
              schema:
                $ref: 'OfferSetResponse'

  /offersets/{uuid}:
    get:
      operationId: OfferSetGet
      parameters:
        - name: uuid
          in: path
          description: The offerset identifier
          required: true
          schema:
            type: string
            format: uuid
          style: simple
      # TODO Errors return error codes and ErrorResponse.
      responses:
        "200":
          description: >-
            Required description ...
          content:
            application/json:
              schema:
                $ref: 'OfferSetResponse'
            application/xml:
              schema:
                $ref: 'OfferSetResponse'
            application/yaml:
              schema:
                $ref: 'OfferSetResponse'

  /sessions/{uuid}:
    get:
      operationId: ExecutionSessionGet
      parameters:
        - name: uuid
          in: path
          description: The session identifier
          required: true
          schema:
            type: string
            format: uuid
          style: simple
      # TODO Errors return error codes and ErrorResponse.
      responses:
        "200":
          description: >-
            Required description ...
          content:
            application/json:
              schema:
                $ref: 'ExecutionSessionResponse'
            application/xml:
              schema:
                $ref: 'ExecutionSessionResponse'
            application/yaml:
              schema:
                $ref: 'ExecutionSessionResponse'

    post:
      operationId: ExecutionSessionPost
      parameters:
        - name: uuid
          in: path
          description: >-
            The session UUID identifier
          required: true
          schema:
            type: string
            format: uuid
          style: simple
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'UpdateRequest'
          application/xml:
            schema:
              $ref: 'UpdateRequest'
          application/yaml:
            schema:
              $ref: 'UpdateRequest'
      # TODO Errors return error codes and ErrorResponse.
      responses:
        "200":
          description: >-
            Required description ...
          content:
            application/json:
              schema:
                $ref: 'ExecutionSessionResponse'
            application/xml:
              schema:
                $ref: 'ExecutionSessionResponse'
            application/yaml:
              schema:
                $ref: 'ExecutionSessionResponse'

components:
  schemas:

    UpdateRequest:
      description: >-
        A request to perform an update.
      type: object
      title: UpdateRequest
      xml:
        name: update-request
      allOf:
        - $ref: './types/updates/update-actions.yaml#/components/schemas/AbstractUpdate'

    UpdateResponse:
      description: >-
        The results of an update.
      type: object
      title: UpdateResponse
      xml:
        name: update-response
      allOf:
        - type: object
          properties:
            result:
              type: string
              enum:
               - "PASS"
               - "FAIL"
        - $ref: './components/messages.yaml#/components/schemas/MessageSubject'

# component.yaml

    ComponentType:
      description: >-
        The type URI/URL for a component.
      type: object
      title: ComponentType
      properties:
        type:
          description: >-
            The type URI/URL for the component.
          type: string

# metadata.yaml

    MetaDataBlock:
      description: >-
        The server side metadata for a component.
      type: object
      title: MetaDataBlock
      properties:
        uuid:
          description: >-
            A globally unique UUID.
          type: string
          format: uuid
        urls:
          description: >-
            A list or URLs to access the component.
          type: array
          items:
            type: string
        name:
          description: >-
            A human readable name for the component.
          type: string
        description:
          description: >-
            A human readable description for the component.
          type: string
        created:
          description: >-
            The date/time when the component was created.
          type: string
          format: date-time
        modified:
          description: >-
            The date/time when the component was last modified.
          type: string
          format: date-time

# resource-metadata.yaml

    ResourceMetaData:
      description: >-
        The server side metadata for a Resource.
      type: object
      title: ResourceMetaData
      allOf:
        - $ref: 'MetaDataBlock'

# resource-execution-phase.yaml

    ResourceExecutionPhase:
      description: >-
        State transition phases for a Resource.
      type: string
      title: ResourceExecutionPhase
      enum:

        - WAITING
        - PREPARING
        - READY
        - RUNNING
        - RELEASING

        - COMPLETED
        - FAILED
        - CANCELLED

# resource-execution-timing.yaml

    ResourceExecutionTiming:
      description: >-
        A Resource execution timing block.
      type: object
      title: ResourceExecutionTiming
      properties:
        preparing:
          $ref: 'ResourceExecutionTimingItem'
        available:
          $ref: 'ResourceExecutionTimingItem'
        releasing:
          $ref: 'ResourceExecutionTimingItem'

    ResourceExecutionTimingItem:
      description: >-
        A Resource execution timing item.
      type: object
      title: ResourceExecutionTimingItem
      properties:
        start:
          $ref: 'ISOInstant'
        duration:
          $ref: 'ISODuration'

# workstep-metadata.yaml

    WorkStepMetaData:
      description: >-
        The server side metadata for a WorkStep.
      type: object
      title: WorkStepMetaData
      allOf:
        - $ref: 'MetaDataBlock'
        - type: object
          properties:
            expires:
              description: >-
                The date/time when the offered workstep expires.
                This is used during the OFFERED phase to indicate how long the offer is available for.
              type: string
              format: date-time

# workstep-execution-phase.yaml

    WorkStepExecutionPhase:
      description: >-
        State transition phases for a WorkStep.
      type: string
      title: WorkStepExecutionPhase
      enum:
        - OFFERED
        - ACCEPTED
        - REJECTED
        - EXPIRED

        - WAITING
        - PREPARING
        - READY
        - RUNNING
        - RELEASING

        - COMPLETED
        - FAILED
        - CANCELLED

# workstep-request-timing.yaml

    WorkStepRequestTiming:
      description: >-
        A WorkStep request timing block.
      type: object
      title: WorkStepRequestTiming
      properties:
        start:
          description: >-
            A list of requested start intervals, formatted as ISOIntervals.
            The server may repond with offers for one or more of the requested intervals.
          type: array
          items:
            $ref: 'ISOInterval'
        duration:
          description: >-
            The requested duration, formatted as an ISODuration.
          $ref: 'ISODuration'

# workstep-execution-timing.yaml

    WorkStepExecutionTiming:
      description: >-
        A WorkStep execution timing block.
      type: object
      title: WorkStepExecutionTiming
      properties:
        preparing:
          $ref: 'WorkStepExecutionTimingItem'
        available:
          $ref: 'WorkStepExecutionTimingItem'
        releasing:
          $ref: 'WorkStepExecutionTimingItem'

    WorkStepExecutionTimingItem:
      description: >-
        A WorkStep execution timing item.
      type: object
      title: WorkStepExecutionTimingItem
      properties:
        start:
          $ref: 'ISOInstant'
        duration:
          $ref: 'ISODuration'

# workstep-discovery.yaml

    DiscoveryWorkStep:
      description: >-
        A Discovery service WorkStep.
      type: object
      title: DiscoveryWorkStep
      properties:
        meta:
          $ref: "WorkStepMetaData"
        spec:
          $ref: "DiscoveryWorkStepSpec"

    DiscoveryWorkStepSpec:
      description: >-
        A Discovery service WorkStep specification.
      type: object
      title: DiscoveryWorkStepSpec
      properties:
        executable:
          $ref: 'DiscoveryExecutableResource'
        compute:
          $ref: 'DiscoveryComputeResource'
        data:
          type: array
          items:
            $ref: 'DiscoveryDataResource'
        storage:
          type: array
          items:
            $ref: 'DiscoveryStorageResource'
        volumes:
          type: array
          items:
            $ref: 'DiscoveryVolumeMount'

    DiscoveryExecutableResource:
      description: >-
        A Discovery service Executable.
      type: object
      title: DiscoveryExecutableResource
      properties:
        meta:
          $ref: "ResourceMetaData"
        spec:
          $ref: "ExecutableResourceSpec"

    DiscoveryComputeResource:
      description: >-
        A Discovery service Executable.
      type: object
      title: DiscoveryExecutableResource
      properties:
        meta:
          $ref: "ResourceMetaData"
        spec:
          $ref: "ComputeResourceSpec"

    DiscoveryDataResource:
      description: >-
        A Discovery service DataResource.
      type: object
      title: DiscoveryDataResource
      properties:
        meta:
          $ref: "ResourceMetaData"
        spec:
          $ref: "DataResourceSpec"

    DiscoveryStorageResource:
      description: >-
        A Discovery service Executable.
      type: object
      title: DiscoveryStorageResource
      properties:
        meta:
          $ref: "ResourceMetaData"
        spec:
          $ref: "StorageResourceSpec"

    DiscoveryVolumeMount:
      description: >-
        A Discovery service Executable.
      type: object
      title: DiscoveryVolumeMount
      properties:
        meta:
          $ref: "ResourceMetaData"
        spec:
          $ref: "VolumeMountSpec"

# workstep-request.yaml

    WorkStepRequest:
      description: >-
        A WorkStep request.
      type: object
      title: WorkStepRequest
      properties:
        meta:
          $ref: "WorkStepMetaData"
        spec:
          $ref: "WorkStepRequestSpec"
        timing:
          $ref: 'WorkStepRequestTiming'

    WorkStepRequestSpec:
      description: >-
        A WorkStep request specification.
      type: object
      title: WorkStepRequestSpec
      properties:
        executable:
          $ref: 'ExecutableResourceRequest'
        compute:
          $ref: 'ComputeResourceRequest'
        data:
          type: array
          items:
            $ref: 'DataResourceRequest'
        storage:
          type: array
          items:
            $ref: 'StorageResourceRequest'
        volumes:
          type: array
          items:
            $ref: 'VolumeMountRequest'

    ExecutableResourceRequest:
      description: >-
        An Executable Resource request.
      type: object
      title: ExecutableResourceRequest
      properties:
      properties:
        meta:
          $ref: "ResourceMetaData"
        spec:
          $ref: "ExecutableResourceSpec"

    ComputeResourceRequest:
      description: >-
        A Compute Resource request.
      type: object
      title: ComputeResourceRequest
      properties:
      properties:
        meta:
          $ref: "ResourceMetaData"
        spec:
          $ref: "ComputeResourceSpec"

    DataResourceRequest:
      description: >-
        A Data Resource request.
      type: object
      title: DataResourceRequest
      properties:
      properties:
        meta:
          $ref: "ResourceMetaData"
        spec:
          $ref: "DataResourceSpec"

    StorageResourceRequest:
      description: >-
        A Storage Resource request.
      type: object
      title: StorageResourceRequest
      properties:
      properties:
        meta:
          $ref: "ResourceMetaData"
        spec:
          $ref: "StorageResourceSpec"

    VolumeMountRequest:
      description: >-
        A Volume Mount request.
      type: object
      title: VolumeMountRequest
      properties:
      properties:
        meta:
          $ref: "ResourceMetaData"
        spec:
          $ref: "VolumeMountSpec"

# workstep-execution.yaml

    WorkStepExecution:
      description: >-
        A WorkStep execution.
      type: object
      title: WorkStepExecution
      properties:
        meta:
          $ref: "WorkStepMetaData"
        spec:
          $ref: "WorkStepExecutionSpec"
        phase:
          $ref: 'WorkStepExecutionPhase'
        timing:
          $ref: 'WorkStepExecutionTiming'

    WorkStepExecutionSpec:
      description: >-
        A WorkStep execution specification.
      type: object
      title: WorkStepExecutionSpec
      properties:
        executable:
          $ref: 'ExecutableResourceExecution'
        compute:
          $ref: 'ComputeResourceExecution'
        data:
          type: array
          items:
            $ref: 'DataResourceExecution'
        storage:
          type: array
          items:
            $ref: 'StorageResourceExecution'
        volumes:
          type: array
          items:
            $ref: 'VolumeMountExecution'

    ExecutableResourceExecution:
      description: >-
        An Executable Resource execution.
      type: object
      title: ExecutableResourceExecution
      properties:
        meta:
          $ref: "ResourceMetaData"
        spec:
          $ref: "ExecutableResourceSpec"
        timing:
          $ref: "ResourceExecutionTiming"

    ComputeResourceExecution:
      description: >-
        A Compute Resource execution.
      type: object
      title: ComputeResourceExecution
      properties:
        meta:
          $ref: "ResourceMetaData"
        spec:
          $ref: "ComputeResourceSpec"
        timing:
          $ref: "ResourceExecutionTiming"

    DataResourceExecution:
      description: >-
        A Data Resource execution.
      type: object
      title: DataResourceExecution
      properties:
        meta:
          $ref: "ResourceMetaData"
        spec:
          $ref: "DataResourceSpec"
        timing:
          $ref: "ResourceExecutionTiming"

    StorageResourceExecution:
      description: >-
        A Storage Resource execution.
      type: object
      title: StorageResourceExecution
      properties:
        meta:
          $ref: "ResourceMetaData"
        spec:
          $ref: "StorageResourceSpec"
        timing:
          $ref: "ResourceExecutionTiming"

    VolumeMountExecution:
      description: >-
        A Volume Mount execution.
      type: object
      title: VolumeMountExecution
      properties:
        meta:
          $ref: "ResourceMetaData"
        spec:
          $ref: "VolumeMountSpec"
        timing:
          $ref: "ResourceExecutionTiming"
















































    VolumeMountList:
      description: >-
        A list of volume mounts.
      title: VolumeMountList
      type: array
      xml:
        name: volumes
      items:
        $ref: './types/volumes/abstract-volume-mount.yaml#/components/schemas/AbstractVolumeMount'

    StorageResourceList:
      description: >-
        A list of storage resources.
      title: AbstractStorageResourceList
      type: array
      xml:
        name: storage
      items:
        $ref: './types/storage/abstract-storage-resource.yaml#/components/schemas/AbstractStorageResource'

    DataResourceList:
      description: >-
        A list of data resources.
      type: array
      title: DataResourceList
      xml:
        name: data
      items:
        $ref: './types/data/abstract-data-resource.yaml#/components/schemas/AbstractDataResource'

    ExecutionSessionBody:
      description: >-
        The main body of a Session, including the executable and the compute, storage, and data resources it needs.
      type: object
      title: ExecutionComponents
      properties:
        executable:
          $ref: 'AbstractExecutable'
        compute:
          $ref: 'AbstractComputeResource'
        volumes:
          $ref: 'VolumeMountList'
        storage:
          $ref: 'StorageResourceList'
        data:
          $ref: 'DataResourceList'

    ExecutionSessionPhase:
      description: >-
        Status code for an execution session.
      type: string
      title: ExecutionSessionPhase
      enum:
        - PROPOSED
        - OFFERED
        - ACCEPTED
        - REJECTED
        - EXPIRED

        - WAITING
        - PREPARING
        - READY
        - RUNNING
        - RELEASING

        - COMPLETED
        - FAILED
        - CANCELLED

    ExecutionSessionResponse:
      description: >-
        An Execution session, including uuid, href, and status.
      type: object
      title: ExecutionSessionResponse
      xml:
        name: execution
      allOf:
        - $ref: 'AbstractComponent'
        - $ref: 'ServedComponent'
        - $ref: 'ScheduledComponent'
        - $ref: 'ExecutionComponents'
        - type: object
          required:
            - uuid
            - state
            - href
            - type
          properties:
            phase:
              $ref: 'ExecutionSessionPhase'
            expires:
              description: >-
                The date and time when an execution offer expires.
                Only relevant while the phase is OFFERED.
              xml:
                name: expires
              type: string
              format: date-time
            options:
              description: >-
                A List of options the client can apply to this Execution.
              type: array
              items:
                $ref: 'AbstractOption'




# offersets.yaml

    OfferSetRequest:
      description: >-
        A request for a set of offers for an execution.
      type: object
      title: OfferSetRequest
      xml:
        name: offers-request
      allOf:
        - $ref: 'ExecutionComponents'
        - type: object
          properties:
            name:
              description: >-
                A human readable name.
              type: string
            description:
              description: >-
                A human readable description.
              type: string
#       executable:
#         xml:
#           name: executable
#         $ref: 'AbstractExecutable'
#       resources:
#         xml:
#           name: resources
#         $ref: 'ExecutionResourceList'
            schedule:
              xml:
                name: schedule
              $ref: 'RequestedScheduleBlock'

    OfferSetResponse:
      description: >-
        A set of executions offered in response to a request,
        including a uuid, href, and an expiry date for the set.
      type: object
      title: OfferSetResponse
      required:
        - uuid
        - href
      xml:
        name: offers-response
      allOf:
        - $ref: 'AbstractComponent'
        - $ref: 'ServedComponent'
        - type: object
          properties:
            result:
              description: >-
                A flag to indicate whether the request can be handled by this service.
                If service is able to handle the request, then the `result` will be `YES`
                and the `offers` block should contain one or more offers.
                If service is not able to handle the request, the `result` will be `NO`
                and the `messages` block should contain one or more reasons explaining why.
              type: string
              enum:
                - "YES"
                - "NO"
            description:
              description: >-
                A human readable description.
              type: string
            offers:
              type: array
              xml:
                name: offers
                wrapped: true
              items:
                $ref: 'ExecutionSessionResponse'
                xml:
                  name: execution



