from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.update_base import UpdateBase
from openapi_server import util

from openapi_server.models.update_base import UpdateBase  # noqa: E501

class IntegerDeltaUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type=None, path=None, delta=None, units=None):  # noqa: E501
        """IntegerDeltaUpdate - a model defined in OpenAPI

        :param type: The type of this IntegerDeltaUpdate.  # noqa: E501
        :type type: str
        :param path: The path of this IntegerDeltaUpdate.  # noqa: E501
        :type path: str
        :param delta: The delta of this IntegerDeltaUpdate.  # noqa: E501
        :type delta: int
        :param units: The units of this IntegerDeltaUpdate.  # noqa: E501
        :type units: str
        """
        self.openapi_types = {
            'type': str,
            'path': str,
            'delta': int,
            'units': str
        }

        self.attribute_map = {
            'type': 'type',
            'path': 'path',
            'delta': 'delta',
            'units': 'units'
        }

        self._type = type
        self._path = path
        self._delta = delta
        self._units = units

    @classmethod
    def from_dict(cls, dikt) -> 'IntegerDeltaUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The IntegerDeltaUpdate of this IntegerDeltaUpdate.  # noqa: E501
        :rtype: IntegerDeltaUpdate
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self) -> str:
        """Gets the type of this IntegerDeltaUpdate.


        :return: The type of this IntegerDeltaUpdate.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this IntegerDeltaUpdate.


        :param type: The type of this IntegerDeltaUpdate.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")  # noqa: E501

        self._type = type

    @property
    def path(self) -> str:
        """Gets the path of this IntegerDeltaUpdate.

        The target path that the update applies to.   # noqa: E501

        :return: The path of this IntegerDeltaUpdate.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path: str):
        """Sets the path of this IntegerDeltaUpdate.

        The target path that the update applies to.   # noqa: E501

        :param path: The path of this IntegerDeltaUpdate.
        :type path: str
        """
        if path is None:
            raise ValueError("Invalid value for `path`, must not be `None`")  # noqa: E501

        self._path = path

    @property
    def delta(self) -> int:
        """Gets the delta of this IntegerDeltaUpdate.

        The increment or decrement to apply.   # noqa: E501

        :return: The delta of this IntegerDeltaUpdate.
        :rtype: int
        """
        return self._delta

    @delta.setter
    def delta(self, delta: int):
        """Sets the delta of this IntegerDeltaUpdate.

        The increment or decrement to apply.   # noqa: E501

        :param delta: The delta of this IntegerDeltaUpdate.
        :type delta: int
        """
        if delta is None:
            raise ValueError("Invalid value for `delta`, must not be `None`")  # noqa: E501

        self._delta = delta

    @property
    def units(self) -> str:
        """Gets the units of this IntegerDeltaUpdate.

        The units to use for the change.   # noqa: E501

        :return: The units of this IntegerDeltaUpdate.
        :rtype: str
        """
        return self._units

    @units.setter
    def units(self, units: str):
        """Sets the units of this IntegerDeltaUpdate.

        The units to use for the change.   # noqa: E501

        :param units: The units of this IntegerDeltaUpdate.
        :type units: str
        """

        self._units = units
