from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.execution_duration import ExecutionDuration
from openapi_server import util

from openapi_server.models.execution_duration import ExecutionDuration  # noqa: E501

class ExecutionScheduleItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, start=None, duration=None):  # noqa: E501
        """ExecutionScheduleItem - a model defined in OpenAPI

        :param start: The start of this ExecutionScheduleItem.  # noqa: E501
        :type start: str
        :param duration: The duration of this ExecutionScheduleItem.  # noqa: E501
        :type duration: ExecutionDuration
        """
        self.openapi_types = {
            'start': str,
            'duration': ExecutionDuration
        }

        self.attribute_map = {
            'start': 'start',
            'duration': 'duration'
        }

        self._start = start
        self._duration = duration

    @classmethod
    def from_dict(cls, dikt) -> 'ExecutionScheduleItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ExecutionScheduleItem of this ExecutionScheduleItem.  # noqa: E501
        :rtype: ExecutionScheduleItem
        """
        return util.deserialize_model(dikt, cls)

    @property
    def start(self) -> str:
        """Gets the start of this ExecutionScheduleItem.

        The start time for the execution, expressed as an ISO 8601 time interval. See : https://en.wikipedia.org/wiki/ISO_8601#Time_intervals   # noqa: E501

        :return: The start of this ExecutionScheduleItem.
        :rtype: str
        """
        return self._start

    @start.setter
    def start(self, start: str):
        """Sets the start of this ExecutionScheduleItem.

        The start time for the execution, expressed as an ISO 8601 time interval. See : https://en.wikipedia.org/wiki/ISO_8601#Time_intervals   # noqa: E501

        :param start: The start of this ExecutionScheduleItem.
        :type start: str
        """

        self._start = start

    @property
    def duration(self) -> ExecutionDuration:
        """Gets the duration of this ExecutionScheduleItem.

        The duration for the execution.   # noqa: E501

        :return: The duration of this ExecutionScheduleItem.
        :rtype: ExecutionDuration
        """
        return self._duration

    @duration.setter
    def duration(self, duration: ExecutionDuration):
        """Sets the duration of this ExecutionScheduleItem.

        The duration for the execution.   # noqa: E501

        :param duration: The duration of this ExecutionScheduleItem.
        :type duration: ExecutionDuration
        """

        self._duration = duration
