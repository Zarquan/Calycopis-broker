#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2025, Manchester (http://www.manchester.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-indent
#
# AIMetrics: []
#

    Target:

        Success

    Result:

        Work in progress ...

# -----------------------------------------------------




    interface Platform





        interface CanfarPlatform
        extends Platform


        interface CanfarSimpleStorageResource
        extends
        SimpleStorageResource


        interface CanfarSimpleDataResource
        extends
        SimpleDataResource
            storage -> CanfarSimpleStorageResource


        interface CanfarSimpleDownloadStep
        extends
        SimpleDownloadStep
            storage -> CanfarSimpleStorageResource
            execute()
                storage.service.pullToVOSpace()




        interface CanfarSimpleStorageResourceFactory
        extends
        SimpleStorageResourceFactory

            select(....)

            create(....)


        interface CanfarSimpleDataResourceFactory
        extends
        SimpleDataResourceFactory

            create(....)

                storage = CanfarStorageResourceFactory.select(uuid)

                resource = save(
                    new CanfarSimpleDataResource(
                        session,
                        storage
                        )
                    )

                wait = WaitforStorageStepFactory.create(
                    resource,
                    storage
                    )
                resource.addPrepareStep(
                    wait
                    )

                download = CanfarDownloadStepFactory.create(
                    resource,
                    storage,
                    source,
                    path
                    )
                resource.addPrepareStep(
                    download
                    )

                checksum = CanfarChecksumStepFactory.create(
                    resource,
                    storage,
                    source,
                    path
                    )
                resource.addPrepareStep(
                    checksum
                    )







                CanfarStorageResourceFactory

                    create(....)

                        CanfarStorageResource
                        extends
                        SimpleStorageResource


                            getDownloadStep() <-- used by CanfarSimpleDataResource






        PodmanPlatform
        extends Platform


                PodmanStorageResourceFactory

                    create(....)

                        PodmanStorageResource
                        extends
                        SimpleStorageResource


                            getDownloadStep()

                                PodmanDownloadStep
                                extends
                                HTTPDownloadStep
                                    storage -> PodmanStorageResource
                                    execute()
                                        podman volume create ...
                                        podman run httpdownloadagent
                                            --volume = storage.getVolumeName()





        LibvirtPlatform
        extends Platform



                LibvirtStorageResourceFactory

                    create(....)

                        LibvirtStorageResource
                        extends
                        SimpleStorageResource

                            getDownloadStep()

                                LibvirtDownloadStep
                                extends
                                HTTPDownloadStep
                                    storage -> LibvirtStorageResource
                                    execute()
                                        virsh volume create ...
                                        virsh run httpdownloadagent
                                            --volume = storage.getVolume()



























