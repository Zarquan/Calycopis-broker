#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2024, Manchester (http://www.manchester.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-indent
#
# AIMetrics: []
#

    Target:

        Move the main business logic into JPA entities in Hibernate.
        Add persistent classes to implement the resource configuration steps.


    Result:

        Work in progress ...


# -----------------------------------------------------
# Start a new branch.
#[user@desktop]

    branchname=jpa-entities
    newbranch=$(date '+%Y%m%d')-zrq-${branchname:?}

    source "${HOME:?}/calycopis.env"
    pushd "${CALYCOPIS_CODE}"

        git checkout main

        git checkout -b "${newbranch:?}"

        git push --set-upstream 'origin' "$(git branch --show-current)"

    popd


# -----------------------------------------------------
# Launch a container to work in.
#[user@desktop]

    source "${HOME:?}/calycopis.env"
    pushd "${CALYCOPIS_CODE}"

        pushd openapi

            podman run \
                --rm \
                --tty \
                --interactive \
                --publish 8082:8082 \
                --name spring-builder \
                --volume "$(pwd)/ivoa:/ivoa:ro,z" \
                --volume "$(pwd)/impl/java/spring:/spring:rw,z" \
                ghcr.io/ivoa/calycopis/java-builder:2024.08.30 \
                bash

    >   ....
    >   ....


# -----------------------------------------------------
# Generate the Java classes and run our webapp.
#[root@spring-builder]

    pushd /spring/spring-openapi ; ./mvnw clean install ; popd

    pushd /spring/spring-webapp  ; ./mvnw clean spring-boot:run ; popd

    >   ....
    >   ....


# -----------------------------------------------------
# -----------------------------------------------------
# Connect to the H2 console in a browser.
#[user@desktop]

    firefox \
        --new-window \
        'http://localhost:8082/h2-console/' \
        &

    jdbc: jdbc:h2:mem:testdb
    user: sa
    pass: password

    >   ....
    >   ....


# -----------------------------------------------------
# Test our webapp in a second terminal.
#[user@desktop]

    podman exec \
        --tty \
        --interactive \
        spring-builder \
        bash

    >   ....
    >   ....


# -----------------------------------------------------
# -----------------------------------------------------
# Create some offers ...
#[root@spring-builder]

cat > /tmp/createrequest.yaml  << EOF
executable:
  properties:
  name: Test executable
  type: urn:jupyter-notebook-0.1
  notebook: https://raw.githubusercontent.com/Zarquan/binder-demo/main/02_dmhh.ipynb
schedule:
  requested:
    executing:
      duration: PT1H
EOF

    curl \
        --silent \
        --show-error \
        --location \
        --header 'Content-Type: application/yaml' \
        --data-binary '@/tmp/createrequest.yaml' \
        --header 'Accept: application/yaml' \
        'http://127.0.0.1:8082/offerset' \
    | tee '/tmp/createresponse.yaml' \
    | yq '.offers[].schedule'

    >   ....
    >   ....



