#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2024, Manchester (http://www.manchester.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-indent
#
# AIMetrics: []
#

    Target:

        Checking we can do what we need to in CANFAR.

    Result:

        CADC CANFAR Science portal
        https://www.canfar.net/science-portal/

        Username/password in browser

        Web service Swagger UI
        https://ws-uv.canfar.net/skaha/#/

        CANFAR storage
        https://www.canfar.net/en/docs/storage/

        OpenCADC client and server implementation of VOSpace 2.1
        https://github.com/opencadc/vos

        VOSpace home directory
        https://www.canfar.net/storage/arc/list/home/Zarquan




# -----------------------------------------------------
# Launch a container to run some Python code.
#[user@laptop]

    source "${HOME:?}/pandak.env"
    pushd "${PANDAK_CODE}"

        pushd experiments/openapi

            podman run \
                --rm \
                --tty \
                --interactive \
                --name canfar-builder \
                --volume "$(pwd)/ivoa:/ivoa:ro,z" \
                --volume "$(pwd)/impl/python/chatgpt/webapp-0.6-canfar:/canfar:rw,z" \
                --volume "/home/h15033dm/cadcproxy.pem:/canfar/cadcproxy.pem:rw,z" \
                python:3.9 \
                bash


                pip install \
                    --upgrade \
                    requests

                pip install \
                    --upgrade \
                    vos

                python

#
# Explore the user's home directory.
from vos import Client

client = Client(
  vospace_certfile='/canfar/cadcproxy.pem'
  )

client.listdir(
    uri='arc:/home/Zarquan',
    force=True
    )

    >   [
    >   '.npm',
    >   '.vnc',
    >   '.bashrc',
    >   '.Xresources',
    >   '.dbus',
    >   '.token',
    >   '.gnupg',
    >   'Untitled.ipynb',
    >   '.xfce4-session.verbose-log',
    >   '.local',
    >   '.java',
    >   '.gvfs',
    >   '.casa',
    >   '.cache',
    >   '.chromium-browser.init',
    >   '.jupyter',
    >   '.Xauthority',
    >   '.ssl',
    >   '.ipython',
    >   'Albert',
    >   '.ipynb_checkpoints',
    >   'VisIVODesktopTemp',
    >   'Zarquan-stats',
    >   '.ICEauthority'
    >   ]


client.copy(
    'arc:/home/Zarquan/Untitled.ipynb',
    '/tmp'
    )


# -----------------------------------------------------
# Check the file arrived.
#[user@laptop]


    podman exec \
        -it \
        canfar-builder \
            bash

    cat /tmp/Untitled.ipynb

    >   {
    >    "cells": [],
    >    "metadata": {},
    >    "nbformat": 4,
    >    "nbformat_minor": 5
    >   }


    #
    # So we can see the user's home directory
    # and access files in it.
    #



# -----------------------------------------------------
# Try launching a notebook session.
#[user@laptop]

import requests as http_requests

cert =  "/canfar/cadcproxy.pem"
name =  "albert"
image = "images.canfar.net/skaha/base-notebook:latest"

url = "https://ws-uv.canfar.net/skaha/v0/session"
info = {"name":name, "image":image}

response = http_requests.post(url, cert=cert, data=info)

response

    >   <Response [200]>


response.headers

    >   {
    >   'content-length': '9',
    >   'content-type': 'text/plain',
    >   'date': 'Mon, 05 Aug 2024 18:33:40 GMT',
    >   'server': 'OpenCADC/cadc-rest',
    >   'x-vo-authenticated': 'Zarquan'
    >   }

print(
    response.content
    )

    >   b'tfln7ot5\n'

sessionid = response.content.decode("utf-8").rstrip()

print(
    sessionid
    )

    >   tfln7ot5

    #
    # .. and we get a Jupyter Hub session
    # based in the user's home directory.
    #

url  = "https://ws-uv.canfar.net/skaha/v0/session/" + sessionid

response = http_requests.get(url, cert=cert)

print(response)

    >   <Response [200]>


response.headers

    >   {
    >   'content-length': '685',
    >   'content-type': 'application/json',
    >   'date': 'Mon, 05 Aug 2024 18:35:51 GMT',
    >   'server': 'OpenCADC/cadc-rest',
    >   'x-vo-authenticated': 'Zarquan'
    >   }


print(
    response.content.decode("utf-8")
    )

    >   {
    >     "id": "tfln7ot5",
    >     "userid": "Zarquan",
    >     "runAsUID": "1064602451",
    >     "runAsGID": "1064602451",
    >     "supplementalGroups": [
    >       1290563062,
    >       1025424273
    >     ],
    >     "appid": "<none>",
    >     "image": "images.canfar.net/skaha/base-notebook:latest",
    >     "type": "notebook",
    >     "status": "Running",
    >     "name": "albert",
    >     "startTime": "2024-08-05T18:33:40Z",
    >     "expiryTime": "2024-08-09T18:33:40Z",
    >     "connectURL": "https://ws-uv.canfar.net/session/notebook/tfln7ot5/lab/tree/arc/home/Zarquan?token=tfln7ot5",
    >     "requestedRAM": "8G",
    >     "requestedCPUCores": "2",
    >     "requestedGPUCores": "0",
    >     "ramInUse": "190M",
    >     "gpuRAMInUse": "<none>",
    >     "cpuCoresInUse": "0.002",
    >     "gpuUtilization": "<none>"
    >   }

    #
    # Can we pass in the name of the notebook to load ?
    # Actually, we don't need to.
    # We can just add the path/file of the notebook to the connect URL.
    #

firefox \
    --new-window \
    https://ws-uv.canfar.net/session/notebook/tfln7ot5/lab/tree/arc/home/Zarquan/Albert.ipynb?token=tfln7ot5 \
    &


    #
    # Big question - does the Spanish CANFAR have VOSpace next to it ?
    #


