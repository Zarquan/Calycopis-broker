#
# <meta:header>
#   <meta:licence>
#     Copyright (c) 2024, Manchester (http://www.manchester.ac.uk/)
#
#     This information is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This information is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
#   </meta:licence>
# </meta:header>
#
#zrq-notes-indent
#
# AIMetrics: []
#

    Target:

        Submit an abstract for a poster at ADASS 2024.

        Poster submission deadline 18th October.
        https://www.um.edu.mt/events/adass2024/abstractsubmission/

        Abstract submission service
        https://pretalx.com/adass2024/cfp

    Result:

        Abstract for poster submitted
        https://pretalx.com/adass2024/me/submissions/9EMZ8Z/
        https://pretalx.com/adass2024/talk/review/ZPCEXXMCGR88TS7MMBKXKCTQNWUFB87F


# -----------------------------------------------------

Using OpenAPI to describe complex web services

Our team at the SKA Observatory (SKAO) [1] are developing a specification for the
International Virtual Observatory Alliance IVOA [2] ExecutionBroker [3] service that
will help to facilitate cross-platform code execution across a heterogeneous federation
of different types of science platform.

As part of this we have been participating in the IVOA Protocols Transition Team (P3T)
[4] looking at ways to update the IVOA standards to be compatible with modern software
development environments and current best practice.

We have been evaluating the OpenAPI [5] service description language as a tool for
describing the web service interface in a concise and standardised machine readable format.

Our overall experience of using OpenAPI has been positive, and we believe that providing
a machine readable definition of our service interfaces alongside the service specification
documents will extend the usability and lifetime of the IVOA standards. Making it easier
to port our implementations to new platforms and frameworks in the future.

In this poster we will describe our experience of using OpenAPI and we will present some
examples of things that worked well and some that didn't work so well.

[1] https://www.skao.int/en
[2] https://ivoa.net/
[3] https://github.com/ivoa-std/ExecutionBroker
[4] https://wiki.ivoa.net/twiki/bin/view/IVOA/DALGWSTigerTeam
[5] https://swagger.io/specification/


